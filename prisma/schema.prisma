datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  username      String?   @unique
  password      String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Amenitie {
  id            String    @id @default(cuid())
  name          String
  roomId        String
  room          Room      @relation(fields: [roomId], references: [id])
}

model Image {
  id            String    @id @default(cuid())
  url           String
  roomId        String
  room          Room      @relation(fields: [roomId], references: [id])
}

model Booking {
  id            String    @id @default(cuid())
  checkIn       String
  checkOut      String
  name          String
  lastname      String
  email         String
  phone         String
  country       String
  garage        Boolean
  tours         Boolean

  roomId        String
  room          Room   @relation(fields: [roomId], references: [id])
}

model Room {
  id            String    @id @default(cuid())
  name          String
  roomNumber    Int       @unique
  description   String
  adults        Int
  children      Int
  amenities     Amenitie[]
  view          String
  bed           String
  category      String
  price         Int
  images        Image[]
  bookings      Booking[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}